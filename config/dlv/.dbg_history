help
n
bp
s
c
r
b 69
l
c
break main.init
c
s
l
ll
list
help
ls
n
c
break 74
c
r
l
c
q
help
l
c
q
cfgFile
help
locals
vars
l
clear
ll
l
p cfgFile
s
f
help
stepout
n
p err
n
stepout
p cfgFile
n
s
stepout
n
s
stepout
p filename
n
p filename
p err
c
s
n
p cf
p err
n
p err
c
q
n
bt
n
c
q
p home
p _
p homedir.Dir()
p home
q
l
list
break TestRestAPILogin
c
s
n
err
p err
p r
l
n
p err
p res
p client
n
c
q
n
err
p err
p r
n
p res
n
c
q
n
print testcli.Failure()
print testcli
n
c
q
n
c
q
s
n
s
n
print c.stdout
print c.stderr
n
c.exitError
ll
l
c
q
help
l
break main.cmd.login
break cmd.login
c
s
restapi
p restapi
n
viper
c
q
break TestRootTryReadConfigWithoutOverride
c
n
p err
n
p err
c
q
break TryReadConfig
c
s
p CfgFile
n
s
n
p err
n
p err
s
n
c
q
break cmd.root.initConfig
break root.initConfig
break cmd.root.TryStartSession
break initConfig
c
break cmd.root.initConfig
break root.initConfig
break cmd.initConfig
c
n
s
n
CfgFile
p CfgFile
n
p API_KEY
p BASE_URL
p PUBLIC_KEY_PATH
p BASE_URL
c
r
c
n
s
p CfgFile
n
c
q
b cmd.initConfig
c
n
p BASE_URL
n
p BASE_URL
n
s
n
s
n
p REFRESH_TOKEN
BASE_URL
p BASEURL
p BASE_URL
p PUBLIC_KEY_PATH
p PRIVATE_KEY_PATH
c
q
n
p subList
q
l
c
q
n
p subList
n
p schemaLoader
n
p result
c
r
c
n
p err
n
c
q
n
p err
c
q
n
p err
p result
n
c
q
help
frame
break RestClient
break login
c
continue
l
c
d
q
help
list
c
q
c
sh
print sh
help
q
c
print unmarshal
help
locals
c
err
locals
up
test.v
print test.v
print test.content
c
q
l
list
c
s
n
print n
n
print issues
print d.terrors
c
err
print err
c
print err
c
q
c
print err
c
locals
c
q
l
c
locals
err
print err
c
print err
c
print err
c
q
c
q
c
q
l
c
prin tp
print p
c
print p
c
q
c
q
c
q
c
q
c
n
e
n
e
print e
taskfile
p taskfile
n
s
n
p c.Task
p e.TaskFile.Tasks
p e.Taskfile.Tasks
p e.Taskfile.Tasks["impossible"].Precondition
n
s
n
p e.Force
n
p upToDate
s
t.Precondition
p t.Precondition
t
p t
c
q
l
c
task
n
task
p task
print task
n
print t
print taskFile
l
n
s
n
print e.Taskfile
print e.Taskfile["foo"]
print e.Taskfile.Tasks["foo"]
n
e.taskFile
print e.taskFile
print e.Taksfile
print e.Taskfile
print e.Taskfile.Task["foo"]
print e.Taskfile.Tasks["foo"]
print e.Taskfile.Tasks["impossible"]
n
s
n
s
e
print e.Context
print c
print c.Preconditions
s
n
t
print t
q
l
c
print buff.String()
n
help
eval buff.String()
q
c
print buffer
c
q
c
n
c
q
c
n
q
c
print str
n
q
c
print str
c
q
c
q
c
s
n
s
n
t
print t
n
tn
n
c
q
c
s
n
s
n
s
n
s
n
s
n
c
q
c
q
c
s
n
s
n
s
n
s
n
s
n
s
n
s
err
print err
c
q
c
break areTaskPreconditionsMet
c
l
c
q
c
break areTaskPreconditionsMet
c
n
t
print t
n
s
c
t
print t
n
s
n
p err
n
print p
c
q
c
break areTaskPreconditionsMet
c
t
n
p t
n
print p
n
p.Msg
print p.Msg
c
q
c
break areTaskPreconditionsMet
c
n
t
print t
print p
c
q
c
print sh
n
print p
n
c
q
c
q
c
q
c
n
p err
p p
q
c
precond.Sh
p precond
n
q
c
q
c
q
help
c
q
breakpoint status.IsUpToDate
breakpoint
l
c
help
break IsUpToDate
github.com/go-task/task/v2/internal/status.(*Checksum).IsUpToDate
break github.com/go-task/task/v2/internal/status.(*Checksum).IsUpToDate
c
r
break isTaskUpToDate
c
s
len(t.Status)
n
s
n
print t.Dir
n
p isUpToDate
c
q
c
s
n
s
n
p t
n
s
n
t
p t
c
q
c
t
p t
l
s
n
s
p e.Taskfile.Tasks
q
c
p str
c
q
break RunTask
c
l
c
q
c
break RunTask
c
s
n
t
p t
n
s
n
p preCondMet
s
n
l
n
p upToDate
c
n
break RunTask
c
n
s
n
s
n
q
c
q
c
n
t
p t
n
p checker
c
q
c
q
c
q
c
t
p t
c
p t
c
p t
c
q
c
break isTaskUpToDate
c
n
p t
n
p statusCmdsUpToDate
c
q
c
q
c
q
c
q
c
break isTaskUpToDate
c
n
p t
n
p t
n
c
n
p t
n
p statusCmdsUpToDate
p t
c
q
break CompiledTask
c
n
origTask
p origTask
c
q
c
call
p task
l
p t
p origTask
n
len(origTask.Status)
p origTask.Status
break CompiledTask
c
n
p call.Task
c
p call.Task
n
p origTask.Status
n
s
n
p value
p call.Task
n
p vars
p vars['CHECKSUM']
p vars["CHECKSUM"]
l
print vars["checksum"]
c
q
c
n
s
n
p sources
up
p new.Sources
c
q
c
n
new.Sources
p new.Sources
n
s
n
p sources
n
q
c
n
p value
n
p vars["CHECKSUM"]
n
p new.Status
c
q
c
n
p new
q
c
q
c
q
c
n
p value
n
p new
c
q
c
n
p value
p new.Method
c
q
c
n
q
c
n
p checker.Kind()
n
p new.Status
c
q
c
q
c
p t
s
n
p s
n
p err
n
p upToDate
c
q
c
q
c
q
c
n
e.Logger
p e.Logger
c
q
c
n
p e.Logger
n
c
q
list
c
n
checker
help
print(checker)
vars
l
print checker
n
print value
n
print vars
l
print origTask.status
print origTask.Status
n
print new.Status
vars
print vars
print vars['CHECKSUM']
print vars["CHECKSUM"]
print r
print r.Vars
print r.Vars["CHECKSUM"]
l
c
s
n
strs
print strs
n
print new
c
q
c
s
n
s
n
string
print string
print str
n
print err
n
print r.strMap
print r.strMap["CHECKSUM"]
n
c
q
c
q
c
n
str
print str
c
print str
c
print str
c
n
r.Vars
print r
print r.strMap["OLDPWD"]
print r.strMap["CHECKSUM"]
print r.strMap["TIMESTAMP"]
c
n
s
n
str
print strs
s
n
p new.Status
c
q
c
n
l
origTask
print origTask
c
print origTask.Status
n
s
n
s
print str
n
print r.strMap
print r.strMap['TIMESTAMP']
print r.strMap["TIMESTAMP"]
c
q
c
n
s
n
s
n
print r.strMap["TIMESTAMP"]
n
print b.String()
n
print new.Status
n
print new.Status
c
