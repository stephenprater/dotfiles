source $HOME/.dotfiles/plugins/antidote/antidote.zsh
antidote load $HOME/.dotfiles/zsh/zsh_plugins.txt

# shortcut to this dotfiles path is $DOTHOME
export DOTHOME=$HOME/dotfiles

# all of our zsh files
typeset -U config_files
setopt extended_glob
config_files=($DOTHOME/(^(plugins)/)#*zsh)

# load the path files
for file in ${(M)config_files:#*/path.zsh}
do
  source $file
done

# load everything but the path and completion files
for file in ${${${config_files:#*/path.zsh}:#*/completion.zsh}:#*completion/*}
do
  source $file
done

[[ -x /opt/homebrew/bin/brew ]] && eval "$(/opt/homebrew/bin/brew shellenv)"

if [ ! $SPIN ]; then
  FPATH="$(brew --prefix)/share/zsh/site-functions:${FPATH}"
else
  FPATH="/usr/share/zsh/site-functions:${FPATH}"
fi

# initialize autocomplete here, otherwise functions won't be loaded
autoload -U compinit
compinit

zstyle ':completion:*:options' auto-description '%d'
zstyle ':completion:*:options' description 'yes'
zstyle ':completion:*:(rm|cp):*' ignore-line yes
zstyle ':completion:*' list-colors
zstyle ':completion:*' menu select
zstyle ':completion:*' group-name ''
zstyle ':completion:*' verbose true
zstyle ':completion:*:descriptions' format '%F{green}Completions for %B%d%b%f'
zstyle ':completion:*:messages' format '%d'
zstyle ':completion:*:warnings' format 'No matches for: %d'
zstyle ':completion:*:corrections' format '%B%d (errors: %e)%b'
zstyle ':completion:*:approximate:*' original true
zstyle ':completion:*:approximate:*' prompt 'Approximate to: %e'

setopt menucomplete

# Bash completions!
autoload -U +X bashcompinit && bashcompinit

# load every completion after autocomplete loads
for file in ${(M)config_files:#(*completions/*|*/completion.zsh)}
do
  source $file
done

if [ -x "$(command -v spin)" ]; then
  eval "$(spin completion)"
fi

if [ -x "$(command -v poetry)" ]; then
  eval $(poetry completions zsh)
fi

# set cd autocompletion to commonly visited directories
setopt auto_cd
SOURCE_DIR=$HOME/src
cdpath=(. ~/src $SOURCE_DIR/github.com/stephenprater $SOURCE_DIR/github.com/Shopify)

zmodload -i zsh/parameter

autoload -U edit-command-line
autoload -U colors
zle -N edit-command-line
bindkey -M vicmd 'v' edit-command-line
bindkey -M vicmd ':' executed-named-command

# Configure the Prompt
setopt prompt_subst

autoload -U promptinit; promptinit

# Use EXA instead of LS
export EXA_COLORS="uu=38;5;239:ur=38;5;16:gr=38;5;16:tr=38;5;16:uw=32:sn=38;5;240:sb=38;5;240:da=38;5;242"

export EDITOR=nvim
export COMPOSE_HTTP_TIMEOUT=10000

if [ ! $SPIN ]; then
  export HOST_IP=$(ipconfig getifaddr en0)
fi

export PATH=$PATH:$DOTHOME/script
export PKG_CONFIG_PATH=/opt/homebrew/lib/pkgconfig:$PKG_CONFIG_PATH

# # Load Environment Credenials from Keybase
# # if [ ! -f $DOTHOME/zsh/credentials.zsh ]; then
# #   cp $KEYBASE/credentials.zsh $DOTHOME/zsh/credentials.zsh
# #   source $DOTHOME/zsh/credentials.zsh
# # fi

autoload predict-on
predict-toggle() {
  ((predict-on=1-predict-on)) && predict-on || predict-off
}
zle -N predict-toggle
bindkey '' predict-toggle
zstyle ':predict' toggle true
zstyle ':predict' verbose true

bindkey -M vicmd 'q:' fzf-history-widget

export POETRY_HOME="$HOME/.local/share/pypoetry"

# cloudplatform: add Shopify clusters to your local kubernetes config
export KUBECONFIG=${KUBECONFIG:+$KUBECONFIG:}/Users/stephenprater/.kube/config:/Users/stephenprater/.kube/config.shopify.cloudplatform

STRML_INSERT_CHAR="%{\e[36m%}❯%{\e[0m%}"
STRML_NORMAL_CHAR="%{\e[36m%}❮%{\e[0m%}"
STRML_USER_CHAR="❯"
STRML_BGJOB_MODE=0
STRML_PROMPT=(job_dots strml_pyenv_dot 'strml_cwd 1 0' 'strml_chrome " "' strml_gitstatus_char strml_status strml_keymap)
STRML_RPROMPT=(dirty_graph)
STRML_INFOLN=(clear_line strml_ssh tool_versions)
STRML_MAGICENTER=(strml_me_dirs git_status strml_pyenv)
STRML_JOIN_CHAR="%{\u200b%}"
source $DOTHOME/zsh/prompt.zsh

source /opt/dev/dev.sh
source ~/.fzf.zsh
source /opt/homebrew/opt/asdf/libexec/asdf.sh
source /opt/dev/sh/chruby/chruby.sh;

[[ -x /opt/homebrew/bin/brew ]] && eval "$(/opt/homebrew/bin/brew shellenv)"
[[ -x /opt/homebrew/bin/shadowenv ]] && eval "$(shadowenv init zsh)"
typeset -f pyenv > /dev/null && eval "$(pyenv virtualenv-init -)"

[[ -f /opt/dev/sh/chruby/chruby.sh ]] && { type chruby >/dev/null 2>&1 || chruby () { source /opt/dev/sh/chruby/chruby.sh; chruby "$@"; } }

# Created by `pipx` on 2024-07-13 01:20:44
export PATH="$PATH:/Users/stephenprater/.local/bin"

[[ -x /opt/homebrew/bin/brew ]] && eval $(/opt/homebrew/bin/brew shellenv)
