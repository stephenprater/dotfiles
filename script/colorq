#!/usr/bin/env python

import sys

# Default color levels for the color cube
cubelevels = [0x00, 0x5f, 0x87, 0xaf, 0xd7, 0xff]
# Generate a list of midpoints of the above list
snaps = [(x+y)/2 for x, y in zip(cubelevels, [0]+cubelevels)]

def rgb2short(r, g, b):
    """ Converts RGB values to the nearest equivalent xterm-256 color.
    """
    # Using list of snap points, convert RGB value to cube indexes
    r, g, b = map(lambda x: len(tuple(s for s in snaps if s<x)), (r, g, b))
    # Simple colorcube transform
    return 16 + r*36 + g*6 + b


if __name__ == "__main__":
    hexv = sys.argv[1]
    components = list(hexv[1:])
    each_component = [''.join(x) for x in [components[i:i+2] for i in range(0, len(components), 2)]]
    r,g,b = [int(comp, 16) for comp in each_component]

    short_code = rgb2short(r,g,b)

    print('%d, %d, %d' % (r,g,b))
    print("\033[38;5;%dm%s->%s\033[0m" % (int(short_code), short_code, hexv))
    print("\033[38;2;%d;%d;%dm%s->%s\033[0m" % (r,g,b,hexv, short_code))


